# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
# https://circleci.com/docs/2.0/configuration-reference/
#
version: 2
jobs:
  pytest:
    docker:
      - image: circleci/python:3.6.1
    environment:
      FLASK_APP: "app.py"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd hellodocker
            python -m flask run &
            FLASK_PID=$!
            sleep 3
            cd ..
            pytest -v
  build_docker:
    docker:
      - image: circleci/python:3.6.1
    environment:
      FLASK_APP: "app.py"

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: test docker
          command: |
            echo $DOCKER_USER

workflows:
  version: 2
  build_and_test:
    jobs:
      - pytest:
          filters:
            tags:
              only: /.*/
      - build_docker:
          context: docker
          requires:
            - pytest
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+){0,1}/
            branches:
              ignore: /.*/
